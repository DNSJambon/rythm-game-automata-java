Mazesolver(Haut){
*(Haut):
| !Got(Power) ? Rest : ()
| Cell(F, V) ? Move(F) : (Droite)
| Cell(F, #) ? Hit(F) : (Haut)
| True ? Wait : (Droite)

*(Droite):
| !Got(Power) ? Rest : ()
| Cell(R, V) ? Move(R) : (Bas)
| Cell(R, #) ? Hit(R) : (Droite)
| True ? Wait : (Bas)

*(Bas):
| !Got(Power) ? Rest : ()
| Cell(B, V) ? Move(B) : (Gauche)
| Cell(B, #) ? Hit(B) : (Bas)
| True ? Wait : (Gauche)

*(Gauche):
| !Got(Power) ? Rest : ()
| Cell(L, V) ? Move(L) : (Haut)
| Cell(L, #) ? Hit(L) : (Gauche)
| True ? Wait : (Haut)

*()
| True ? Wait : ()
}


Wall(S1){
*(S1):
| True ? Wait : (S1)
}

Player1(S1){
*(S1):
| !Got(Power) ? Rest : ()
| Key(m) & Cell(R, V)/Cell(R, P) ? Move(R) : (S1)
| Key(m) & Cell(R, E) ? Hit(R) : (S1)
| Key(o) & Cell(F, V)/Cell(F, P) ? Move(F) : (S1)
| Key(o) & Cell(F, E) ? Hit(F) : (S1)
| Key(l) & Cell(B, V)/Cell(B, P) ? Move(B) : (S1)
| Key(l) & Cell(B, E) ? Hit(B) : (S1)
| Key(k) & Cell(L, V)/Cell(L, P) ? Move(L) : (S1)
| Key(k) & Cell(L, E) ? Hit(L) : (S1)
| True ? Wait : (S1)

* ()
}

Suiveur(S1){
*(S1):
| Closest(#, N) & Cell (F, V) ? Move(F) : (S1)
| Closest(#, S) & Cell (B, V) ? Move(B) : (S1)
| Closest(#, E) & Cell (R, V) ? Move(R) : (S1)
| Closest(#, W) & Cell (L, V) ? Move(L) : (S1)
| Cell (F, #) ? Hit (F) : (S1)
| Cell (B, #) ? Hit (B) : (S1)
| Cell (R, #) ? Hit (R) : (S1)
| Cell (L, #) ? Hit (L) : (S1)
| True ? Wait : (S1)
}

Player2(Init){
* (Init):
| Key(z) ? Move(F) :(Init)
| Key(q) ? Move(L) :(Init)
| Key(s) ? Move(B) :(Init)
| Key(d) ? Move(R) :(Init)

| Key(a) & Cell(H, V) ? Egg() :(Init)

| Key(r) & Cell(H, V) ? Pop() :(Init)

| Key(e) & Cell(H, V) ? Wizz() :(Init)
| True ? Wait : (Init)
}

Squelette(Left){
* (Left):
| Cell(L, V) ? Move(L) : (Left)
| Cell(L, O) ? Turn(R) : (Right)

* (Right):
| Cell(R, V) ? Move(R) : (Right)
| Cell(R, O) ? Turn(L) : (Left)
}

Slime(Monter1){
* (Monter1):
| Cell(F, V) ? Move(F) : (Monter1)
| Cell(F, O) ? Move(B) : (Descendre1)
* (Descendre1):
| Cell(B, V) ? Move(B) : (Descendre2)
| Cell(B, O) ? Move(F) : (Monter2)
* (Descendre2):
| Cell(B, V) ? Move(B) : (Monter2)
| Cell(B, O) ? Move(F) : (Monter2)
* (Monter2):
| Cell(F, V) ? Move(F) : (Monter1)
| Cell(F, O) ? Move(B) : (Descendre1)
}

Key(S1){
*(S1):
| Cell(H, #) ? Pick : (S2)
| True ? Wait : (S1)
* (S2):
| True ? Wait : (S2)
}


